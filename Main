import sys,out,gen_set
from PyQt5 import QtWidgets, QtCore
from main_form import Ui_MainWindow
from executive import exec_functions

class mywindow(QtWidgets.QMainWindow):
    def __init__(self):
        super(mywindow, self).__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.ui.pushButton.clicked.connect(self.json_file_path)
        self.ui.pushButton_2.clicked.connect(self.excel_file_path)
        self.ui.pushButton_3.clicked.connect(self.input_data)
        

    def excel_file_path(self):
        #считаем путь к excel-файлу
        self.excel_file_name=QtWidgets.QFileDialog.getOpenFileName(self,'Указать путь',exec_functions().file_path())[0]
        #изменим цвет кнопки, если файл зачитался
        if self.excel_file_name.endswith('.xlsx'):
            self.ui.pushButton_2.setStyleSheet('QPushButton {background-color: green; color: white;}')
            self.ui.pushButton_2.setText(QtCore.QCoreApplication.translate("MainWindow", "путь указан"))
        else:
            self.ui.pushButton_2.setStyleSheet('QPushButton {background-color: red; color: white;}')
            self.ui.pushButton_2.setText(QtCore.QCoreApplication.translate("MainWindow", "вы указали не excel-файл"))
        '''if (self.ui.pushButton_2.text()=="путь указан"):
            self.ui.pushButton_3.setEnabled(True)'''
        #return excel_file_name
    
    def json_file_path(self):
        #считаем путь к json-файлу
        self.json_file_name=QtWidgets.QFileDialog.getOpenFileName(self,'Указать путь',exec_functions().file_path())[0]
        #изменим цвет кнопки, если файл зачитался
        if self.json_file_name.endswith('.json'):
            self.ui.pushButton.setStyleSheet('QPushButton {background-color: green; color: white;}')
            self.ui.pushButton.setText(QtCore.QCoreApplication.translate("MainWindow", "путь указан"))
        else:
            self.ui.pushButton.setStyleSheet('QPushButton {background-color: red; color: white;}')
            self.ui.pushButton.setText(QtCore.QCoreApplication.translate("MainWindow", "вы указали не json-файл"))
        if (self.ui.pushButton_2.text()=="путь указан") and (self.ui.pushButton.text()=="путь указан"):
            self.ui.pushButton_3.setEnabled(True)
        #зачитаем информацию по ГРП:
        self.data_grp=exec_functions().json_reading(self.json_file_name)
    
    def input_data(self):
        #расчет буфера через:
        bufer_calc=exec_functions().input_data_determ([self.ui.radioButton,self.ui.radioButton_2])
        #характер набора концентрации:
        conc_ch=exec_functions().input_data_determ([self.ui.radioButton_3,self.ui.radioButton_4,self.ui.radioButton_5])
        #вид расчета:
        sch_type=exec_functions().input_data_determ([self.ui.radioButton_9,self.ui.radioButton_10])
        #буфер:
        bufer_type=exec_functions().input_data_determ([self.ui.radioButton_13,self.ui.radioButton_14])
        #строка-ключ для нашего дальнейшего расчета:
        combination_type=f"{bufer_type};{bufer_calc};{conc_ch};{sch_type}"
        #вид расчета
        calculation_type=exec_functions().input_data_determ([self.ui.radioButton_11,self.ui.radioButton_12])
        if calculation_type=="Одно расписание":
            #возьмем информацию с excel:
            cortege_id=exec_functions().out_excel_sheet_id_determ(combination_type)
            data=exec_functions().excel_reading(self.excel_file_name,cortege_id[0],cortege_id[1])
            #откроем форму:
            exec_functions().input_qt_form_determ(combination_type,data)
            output_data=exec_functions().output_excel_reading()[0]
            #функция ниже выведет заполненную таблицу и вернет конечную считанную информацию
            exec_functions().out_qt_form_filling(output_data, out,exec_functions().output_excel_reading()[1],self.json_file_name)
            #new_JS_data=exec_functions().json_treatment(self.data_grp, final_data)
            #exec_functions().json_dumping(new_JS_data,self.json_file_name)
        elif calculation_type=="Набор расписаний":
            #возьмем информацию с excel:
            cortege_id=exec_functions().out_excel_sheet_id_determ(combination_type)
            data=exec_functions().excel_reading(self.excel_file_name,cortege_id[0],cortege_id[1])
            #откроем форму и считаем диапазон задания
            tonnage_values=exec_functions().gen_set(gen_set)
            #составим набор входных данных с разными тоннажами
            input_dataset=exec_functions().data_set_making(data, tonnage_values)
            print(exec_functions().sch_set_making(input_dataset))
            
            

        

        

        
app = QtWidgets.QApplication([])
application = mywindow()
application.show()

sys.exit(app.exec())
